const buildPrompt = (
  title: string,
  availableGenres: string[],
  availableCategories: string[],
  availableAdultGenres: string[],
  availableStatuses: string[]
) => {
  return `Você é um assistente especialista em catalogar animes. A tarefa: retornar EXCLUSIVAMENTE um JSON válido que siga exatamente o schema abaixo (sem campos extras / sem comentários) e com valores adequados. NÃO inclua explicações, texto extra ou markdown. NÃO invente informações: se não tiver certeza absoluta, siga as regras de fallback. Consulta (possivelmente com erros de digitação): "${title}"\n\nSchema (chaves e tipos obrigatórios na criação): { "name": string, "synopsis": string, "category": { "name": string }, "genres": [{ "name": string }], "adultGenres": [{ "name": string }], "typeOfMaterialOrigin": string, "materialOriginName": string, "releaseDate": string (formato ISO YYYY-MM-DD), "isMovie": boolean, "isAdult": boolean, "derivate": { "movies": string[], "ovas": string[], "specials": string[] } | {}, "lastReleaseSeason": number, "actualStatus": string }\n\nRegras e consistência:\n1. Se isMovie = true então lastReleaseSeason = 0.\n2. derivate:\n   2.1. Se NÃO houver NENHUM derivado confirmado (filme, ova ou especial) retornar {}.\n   2.2. Se houver AO MENOS UM derivado confirmado, retornar o objeto completo { movies, ovas, specials }.\n   2.3. Para cada categoria sem itens confirmados, usar array vazio.\n   2.4. NÃO inventar títulos; incluir apenas títulos oficiais.\n   2.5. Não repetir títulos; manter ordem cronológica aproximada se conhecida.\n3. releaseDate: primeira data oficial de estreia (YYYY-MM-DD). Se só mês/ano conhecido usar YYYY-MM-01. Se só ano conhecido usar YYYY-01-01. Se totalmente desconhecida usar 1900-01-01.\n4. Strings desconhecidas: exatamente "Dados não encontrados".\n5. genres: lista (array) de objetos com "name". Gêneros disponíveis no banco: ${availableGenres.join(
    ", "
  )}. OBRIGATORIAMENTE use APENAS esses nomes exatos. NÃO invente gêneros. Escolha os que se enquadram ao anime, adicione o maximos deles. Se nenhum dos gêneros disponíveis se aplicar, use [{ "name": "Dados não encontrados" }]. Priorize usar os gêneros da lista fornecida.\n6. adultGenres: lista de objetos com "name". Gêneros adultos disponíveis no banco: ${availableAdultGenres.join(
    ", "
  )}. OBRIGATORIAMENTE use APENAS esses nomes exatos. Escolha os que se enquadram ao anime, adicione o maximos deles. Se não for adulto ou nenhum dos gêneros disponíveis se aplicar, use array vazio [].\n7. category: objeto com "name". Categorias disponíveis no banco: ${availableCategories.join(
    ", "
  )}. OBRIGATORIAMENTE use APENAS esses nomes exatos. Escolha o que se enquandra ao anime. Se nenhuma das categorias disponíveis se aplicar, use { "name": "Dados não encontrados" }.\n8. actualStatus: status atual do anime. Status disponíveis: ${availableStatuses.join(
    ", "
  )}. Use EXATAMENTE um desses valores.\n9. typeOfMaterialOrigin exemplos: "Manga", "Light Novel", "Web Novel", "Visual Novel", "Game", "Original". Se duvidoso usar "Dados não encontrados".\n10. materialOriginName: se typeOfMaterialOrigin = "Original" usar o título oficial correto. Caso não seja original e não tiver certeza usar "Dados não encontrados".\n11. Não inclua campo id.\n12. Saída deve ser JSON puro sem comentários / sem markdown.\n13. Nunca usar "N/A" ou "Unknown" — somente "Dados não encontrados" ou valores padrão conforme regras.\n14. Não extrapole além do pedido (apenas o JSON).\n15. name: deve ser o título oficial correto (corrigir erros de digitação).\n16. Corrigir quaisquer tipos no título de entrada antes de preencher name e (se aplicável) materialOriginName.\n17. Use APENAS seu conhecimento interno sempre que tiver alta confiança.\n18. Para category.name, genres[].name e adultGenres[].name, não invente ou altere nomes.\n19. Se QUALQUER campo essencial estiver incerto: realize buscas com a ferramenta web_search_preview para confirmar.\n20. synopsis: deve ser sempre em pt-BR. \nAgora gere somente o JSON para a consulta. `;
};

export default buildPrompt;
